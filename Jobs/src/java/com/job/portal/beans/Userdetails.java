package com.job.portal.beans;
// Generated 3 Nov, 2015 12:02:38 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Userdetails generated by hbm2java
 */
@Entity
@Table(name="userdetails"
    ,catalog="job_portal"
)
public class Userdetails  implements java.io.Serializable {


     private Long userId;
     private Date dob;
     private String email;
     private Integer gender;
     private Date joined;
     private String name;
     private String phone;
     private String pwdHash;
     private Integer role;
     private String salt;
     private Set<Companymaster> companymasters = new HashSet<Companymaster>(0);
     private Set<Qualifications> qualificationses = new HashSet<Qualifications>(0);
     private Set<Jobapplications> jobapplicationses = new HashSet<Jobapplications>(0);

    public Userdetails() {
    }

    public Userdetails(Date dob, String email, Integer gender, Date joined, String name, String phone, String pwdHash, Integer role, String salt, Set<Companymaster> companymasters, Set<Qualifications> qualificationses, Set<Jobapplications> jobapplicationses) {
       this.dob = dob;
       this.email = email;
       this.gender = gender;
       this.joined = joined;
       this.name = name;
       this.phone = phone;
       this.pwdHash = pwdHash;
       this.role = role;
       this.salt = salt;
       this.companymasters = companymasters;
       this.qualificationses = qualificationses;
       this.jobapplicationses = jobapplicationses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="userId", unique=true, nullable=false)
    public Long getUserId() {
        return this.userId;
    }
    
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dob", length=10)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

    
    @Column(name="email")
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="gender")
    public Integer getGender() {
        return this.gender;
    }
    
    public void setGender(Integer gender) {
        this.gender = gender;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="joined", length=19)
    public Date getJoined() {
        return this.joined;
    }
    
    public void setJoined(Date joined) {
        this.joined = joined;
    }

    
    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="phone", length=10)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="pwdHash")
    public String getPwdHash() {
        return this.pwdHash;
    }
    
    public void setPwdHash(String pwdHash) {
        this.pwdHash = pwdHash;
    }

    
    @Column(name="role")
    public Integer getRole() {
        return this.role;
    }
    
    public void setRole(Integer role) {
        this.role = role;
    }

    
    @Column(name="salt")
    public String getSalt() {
        return this.salt;
    }
    
    public void setSalt(String salt) {
        this.salt = salt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userdetails")
    public Set<Companymaster> getCompanymasters() {
        return this.companymasters;
    }
    
    public void setCompanymasters(Set<Companymaster> companymasters) {
        this.companymasters = companymasters;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userdetails")
    public Set<Qualifications> getQualificationses() {
        return this.qualificationses;
    }
    
    public void setQualificationses(Set<Qualifications> qualificationses) {
        this.qualificationses = qualificationses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userdetails")
    public Set<Jobapplications> getJobapplicationses() {
        return this.jobapplicationses;
    }
    
    public void setJobapplicationses(Set<Jobapplications> jobapplicationses) {
        this.jobapplicationses = jobapplicationses;
    }




}


